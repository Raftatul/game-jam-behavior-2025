[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://b58muw5w8q7jc"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nkquv"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_nkquv"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_nkquv"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_nkquv"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_q0d12"]
function = 0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_0ipbb"]
function = 12

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_xs4tl"]
parameter_name = "Speed"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ix2b5"]
operator = 2

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_nkquv"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_q0d12"]
parameter_name = "Intensity"
default_value_enabled = true
default_value = 1.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Speed = 1.0;
uniform float Intensity = 1.0;



void fragment() {
// ColorParameter:10
	vec4 n_out10p0 = ColorParameter;


// Input:3
	float n_out3p0 = TIME;


// FloatParameter:6
	float n_out6p0 = Speed;


// FloatOp:7
	float n_out7p0 = n_out3p0 * n_out6p0;


// FloatFunc:4
	float n_out4p0 = sin(n_out7p0);


// FloatFunc:5
	float n_out5p0 = abs(n_out4p0);


// FloatParameter:9
	float n_out9p0 = Intensity;


	float n_out8p0;
// Remap:8
	float n_in8p1 = 0.00000;
	float n_in8p2 = 1.00000;
	float n_in8p3 = 0.00000;
	{
		float __input_range = n_in8p2 - n_in8p1;
		float __output_range = n_out9p0 - n_in8p3;
		n_out8p0 = n_in8p3 + __output_range * ((n_out5p0 - n_in8p1) / __input_range);
	}


// Fresnel:2
	float n_out2p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_out8p0);


// VectorOp:12
	vec4 n_out12p0 = n_out10p0 * vec4(n_out2p0);


// Output:0
	ALBEDO = vec3(n_out12p0.xyz);
	ALPHA = n_out12p0.x;


}
"
graph_offset = Vector2(-163.381, -93.5512)
nodes/fragment/0/position = Vector2(940, 100)
nodes/fragment/2/node = SubResource("VisualShaderNodeFresnel_nkquv")
nodes/fragment/2/position = Vector2(20, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_nkquv")
nodes/fragment/3/position = Vector2(-1200, 260)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatFunc_q0d12")
nodes/fragment/4/position = Vector2(-680, 260)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_0ipbb")
nodes/fragment/5/position = Vector2(-440, 260)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_xs4tl")
nodes/fragment/6/position = Vector2(-1200, 400)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatOp_ix2b5")
nodes/fragment/7/position = Vector2(-900, 260)
nodes/fragment/8/node = SubResource("VisualShaderNodeRemap_nkquv")
nodes/fragment/8/position = Vector2(-220, 220)
nodes/fragment/9/node = SubResource("VisualShaderNodeFloatParameter_q0d12")
nodes/fragment/9/position = Vector2(-600, 500)
nodes/fragment/10/node = SubResource("VisualShaderNodeColorParameter_nkquv")
nodes/fragment/10/position = Vector2(-40, -140)
nodes/fragment/12/node = SubResource("VisualShaderNodeVectorOp_nkquv")
nodes/fragment/12/position = Vector2(340, 140)
nodes/fragment/connections = PackedInt32Array(4, 0, 5, 0, 3, 0, 7, 0, 6, 0, 7, 1, 7, 0, 4, 0, 8, 0, 2, 3, 9, 0, 8, 4, 10, 0, 12, 0, 2, 0, 12, 1, 12, 0, 0, 0, 5, 0, 8, 0, 12, 0, 0, 1)
